From 0488ca390fd7a93bafc1e640425fbd4ddadd04de Mon Sep 17 00:00:00 2001
From: "tony.pizzicato" <tony.grebnev@gmail.com>
Date: Tue, 19 Jul 2016 13:53:33 +0300
Subject: [PATCH] sum stats

---
 controllers/tournaments.js | 90 +++++++++++++++++++++++++++++-----------------
 1 files changed, 57 insertions(+), 33 deletions(-)

diff --git a/controllers/tournaments.js b/controllers/tournaments.js
index b8afd30..bf0d1ce 100644
--- a/controllers/tournaments.js
+++ b/controllers/tournaments.js
@@ -12,6 +12,44 @@ var _                = require('lodash'),
 
 import request from '../utils/request';
 
+const playerFieldsToSum = [
+    'played',
+    'goals',
+    'assists',
+    'goals_assists',
+    'hearts',
+    'stars',
+    'hearts_stars',
+    'goals_assists_hearts_stars',
+    'penGoals',
+    'fkGoals',
+    'noAssistGoals',
+    'assistGoals',
+    'yellowCards',
+    'redCards'
+];
+
+
+const sumStats = stats => {
+    const result = {};
+
+    stats.forEach(player => {
+        if (result.hasOwnProperty(player.playerId)) {
+            var summed = playerFieldsToSum.reduce((player, field) => _.merge(player, { [field]: player[field] + result[player.playerId][field]}), player);
+
+            player     = {
+                ...player,
+                ...summed
+            }
+        }
+
+        result[player.playerId] = player;
+    });
+
+    return _.values(result);
+};
+
+
 module.exports = {
     restRecent: function (req, res, next) {
         LeagueModel.findOne({ slug: req.params.league }, function (err, doc) {
@@ -162,8 +200,10 @@ module.exports = {
 
                 request(`/tournaments/players?ids=${tournament._id}`)
                     .then(response => {
-                        const stats = response.data
-                            .filter(item => !!item.playerId)
+                        let stats = response.data.filter(item => !!item.playerId);
+
+                        stats = sumStats(stats);
+                        stats = stats
                             .sort((a, b) => a.goals_assists_hearts_stars >= b.goals_assists_hearts_stars ? -1 : 1)
                             .slice(0, 10);
 
@@ -277,23 +317,6 @@ module.exports = {
                     }
                 });
 
-                var stats = new Promise(resolve => {
-                    request(`/tournaments/players?ids=${tournament._id}`)
-                        .then(response => {
-                            const stat = { goals: [], assists: [] };
-
-                            stat.goals = [...response.data]
-                                .sort((a, b) => a.goals >= b.goals ? -1 : 1)
-                                .slice(0, 20);
-
-                            stat.assists = [...response.data]
-                                .sort((a, b) => a.assists >= b.assists ? -1 : 1)
-                                .slice(0, 20);
-
-                            resolve(stat);
-                        });
-                });
-
                 var central = new Promise(function (resolve, reject) {
                     GameArticleModel.findOne({
                         tournament:  tournament.remoteId,
@@ -399,19 +422,18 @@ module.exports = {
                     });
                 });
 
-                Promise.all([stats, central, articles, photos, stages]).then(function (result) {
-                    var showCup  = result[4].playOff && Object.keys(result[4].playOff.stages).length;
+                Promise.all([central, articles, photos, stages]).then(function (result) {
+                    var showCup  = result[3].playOff && Object.keys(result[3].playOff.stages).length;
                     var template = (showCup ? 'tournaments/cup' : 'tournaments/item');
 
                     res.render(template, {
                         tournament:     tournament,
-                        stats:          result[0],
-                        central:        result[1],
-                        previews:       result[2].previews,
-                        reviews:        result[2].reviews,
-                        photos:         result[3],
-                        stages:         result[4].stages,
-                        playOff:        result[4].playOff,
+                        central:        result[0],
+                        previews:       result[1].previews,
+                        reviews:        result[1].reviews,
+                        photos:         result[2],
+                        stages:         result[3].stages,
+                        playOff:        result[3].playOff,
                         pageTournament: true
                     });
                 });
@@ -513,9 +535,10 @@ module.exports = {
 
                 request(`/tournaments/players?ids=${tournament._id}`)
                     .then(response => {
-                        const stats = response.data
-                            .filter(item => !!item.playerId)
-                            .sort((a, b) => a.goals_assists_hearts_stars >= b.goals_assists_hearts_stars ? -1 : 1);
+                        let stats = response.data.filter(item => !!item.playerId);
+
+                        stats = sumStats(stats);
+                        stats = stats.sort((a, b) => a.goals_assists_hearts_stars >= b.goals_assists_hearts_stars ? -1 : 1);
 
                         res.title('Статистика');
                         res.render('tournaments/stats', { tournament: tournament, stats: stats, pageStats: true });
@@ -637,11 +660,12 @@ module.exports = {
             parallels = parallels.concat(function (cb) {
                 request(`/tournaments/players?ids=${tournament._id}`)
                     .then(response => {
-                        const goals = response.data
+                        const summed = sumStats(response.data);
+                        const goals = summed
                             .sort((a, b) => a.goals >= b.goals ? -1 : 1)
                             .slice(0, 15);
 
-                        const assists = response.data
+                        const assists = summed
                             .sort((a, b) => a.assists >= b.assists ? -1 : 1)
                             .slice(0, 15);
 
2.7.2

